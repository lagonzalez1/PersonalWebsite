[{"/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/index.js":"1","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/App.js":"2","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/reportWebVitals.js":"3","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/components/Navbar/Navbar.js":"4","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/components/Homepage/Homepage.js":"5","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/Fontloader.js":"6","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/components/Portfolio/Portfolio.js":"7"},{"size":595,"mtime":1654113157952,"results":"8","hashOfConfig":"9"},{"size":680,"mtime":1654149087526,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1654103658654,"results":"11","hashOfConfig":"9"},{"size":990,"mtime":1654149094642,"results":"12","hashOfConfig":"9"},{"size":1396,"mtime":1654146840885,"results":"13","hashOfConfig":"9"},{"size":355,"mtime":1654113955021,"results":"14","hashOfConfig":"9"},{"size":4124,"mtime":1654316083168,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1xr41me",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/index.js",[],[],[],"/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/App.js",["42"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Homepage from \"./components/Homepage/Homepage\"\nimport Portfolio  from './components/Portfolio/Portfolio';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <Routes>\n        <Route exact path=\"/\" element={ <Homepage/> }> </Route>\n        <Route exact path=\"/Portfolio\" element={ <Portfolio/> }></Route>\n\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/reportWebVitals.js",[],[],"/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/components/Navbar/Navbar.js",["43","44","45","46","47"],[],"import React, { Component, useState, useContext } from 'react';\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\nimport { BiRocket } from \"react-icons/bi\";\nimport '../css/navbar.css'\n\n\n\n\nexport default function NavbarLogin() {\n\n    return (\n        <>\n        <Navbar className=\"navbar fixed-bottom \"bg=\"dark\" variant=\"dark\" collapseOnSelect>\n            <Container>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav px-2\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mx-auto\">\n                        <Nav.Link href=\"/\" className='font-loader-hover'>Home</Nav.Link>\n                        <Nav.Link href=\"/About\" className='font-loader-hover'>About</Nav.Link>\n                        <Nav.Link href=\"/Portfolio\" className='font-loader-hover'>Portfolio</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n        </>\n    );\n    \n}","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/components/Homepage/Homepage.js",["48","49"],[],"import React, { useState } from 'react';\nimport '../css/homepage.css'\nimport Image from \"../Images/center2.jpg\";\nimport { Stack } from \"react-bootstrap\";\nimport { AiFillGithub } from 'react-icons/ai';\nimport { AiOutlineLinkedin } from 'react-icons/ai';\n\nexport default function Homepage() {\n\n/*\nList public repositories\nin: https://docs.github.com/en/rest/repos/repos#list-public-repositories\n*/\n    return (\n        <>\n            <div className='container-image'>\n                <img src={Image} className='w-100 d-block'/>\n                <Stack gap={1} className=\"center-stack\" >\n                    <h3 className='font-loader'>My name is</h3>\n                    <h1 className='font-loader'> Luis Gonzalez </h1>\n                    <hr/>\n                    <h3 className='font-loader'> Web Developer / IOS Developer  </h3>\n                </Stack>\n                <Stack gap={1} direction=\"horizontal\" className=\"lower-stack\">\n                    <p className='text-loader'>Reach with me:</p>\n                    <p className='text-loader'><a href='https://www.linkedin.com/in/luis-gonzalez-54a035220/'><AiOutlineLinkedin className='icon-e' size={26}/></a></p>\n                    <p className='text-loader'> <a href='https://github.com/lagonzalez1?tab=repositories'> <AiFillGithub className='icon-e' size={26}/> </a> </p>\n                </Stack>\n\n\n            </div>\n        </>\n    )\n\n}","/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/Fontloader.js",[],[],"/Users/luisgonzalez/Desktop/Personal Web/personal-web/src/components/Portfolio/Portfolio.js",["50","51","52"],[],"import React, { useState, useEffect } from \"react\";\nimport { Container, Figure, Fade , Row, Col, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport \"../css/portfolio.css\";\n\nexport default function Portfolio() {\n\n\n    const [loaded, setLoading] = useState(true);\n\n    const link = \"https://api.github.com/users/lagonzalez1/repos\";\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        const getData = async () => {\n            const { data: response } = await axios.get(link);\n            try {\n                if(response) {\n                    setLoading(false)\n                    console.log(response);\n                    setData(response);\n                }\n            } catch( error) {\n                console.log(error)\n            } \n        }  \n        getData()\n        \n\n    }, [])\n    return ( \n        <>\n            <div className=\"container-fluid padding main\">\n\n            \n\n\n                <Row>\n                    <Col>\n                    \n                    </Col>\n                </Row>\n\n            \n                <Row>\n                    <Col sm={4}>\n                    <div className=\"container-fluid head\">\n                    <h3 className=\"font-loader\">Portfolio</h3>\n\n                    <Fade timeout={500} in={!loaded}>\n                        <div id=\"example-fade-text\">\n                        \n                        <p className=\"font-loader\">Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\n                        terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\n                        labore wes anderson cred nesciunt sapiente ea proident.\n                        </p>\n                        </div>\n                    </Fade>\n                </div>\n                    \n                    \n                    </Col>\n\n                        <Col sm={8}>\n                        <div className=\"container-fluid padding\">\n                            <Table striped hover variant=\"dark\" >\n                                <thead>\n                                    <tr>\n                                    <th>#</th>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Username</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                    <td>1</td>\n                                    <td>Mark</td>\n                                    <td>Otto</td>\n                                    <td>@mdo</td>\n                                    </tr>\n                                    <tr>\n                                    <td>2</td>\n                                    <td>Jacob</td>\n                                    <td>Thornton</td>\n                                    <td>@fat</td>\n                                    </tr>\n                                    <tr>\n                                    <td>3</td>\n                                    <td colSpan={2}>Larry the Bird</td>\n                                    <td>@twitter</td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </div>                       \n                        </Col>\n                </Row>\n           \n            </div>\n        </>\n    )\n}\n\n\n\n/*\n    Diplay title: Basic information about project.\n    1. Dropdown menu or anything facny can be a dropdown that will make an API call to show\n    README.md\n*/\n\n\n/*\n  Data variable: contains 'name'\n  Use 'name' to load all README.md  \n*/\n\n\n/*\nTo get README.md:\n    GET: https://api.github.com/repos/lagonzalez1/Sentiment/contents/README.md\n\n    1. Need to convert response to JSON\n    (Depending the response, might need to access the data using a react method)\n    2. responce will contain 'content' in dic. \n    3. Get value in ccontent\n    4. contents will be encoded base64 \n    5. Decode and this will represent HTML code.\n*/",{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"58","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"59","line":1,"column":38,"nodeType":"55","messageId":"56","endLine":1,"endColumn":48},{"ruleId":"53","severity":1,"message":"60","line":2,"column":34,"nodeType":"55","messageId":"56","endLine":2,"endColumn":45},{"ruleId":"53","severity":1,"message":"61","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":18},{"ruleId":"53","severity":1,"message":"58","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":17,"column":17,"nodeType":"64","endLine":17,"endColumn":61},{"ruleId":"53","severity":1,"message":"65","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":19},{"ruleId":"53","severity":1,"message":"66","line":2,"column":21,"nodeType":"55","messageId":"56","endLine":2,"endColumn":27},{"ruleId":"53","severity":1,"message":"67","line":12,"column":12,"nodeType":"55","messageId":"56","endLine":12,"endColumn":16},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'NavDropdown' is defined but never used.","'BiRocket' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","'Figure' is defined but never used.","'data' is assigned a value but never used."]